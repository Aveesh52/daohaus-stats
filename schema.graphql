type Moloch @entity {
  id: ID!
  timestamp: String!
  summoner: Bytes!
  title: String
  version: String
  newContract: String
  deleted: Boolean
  summoningTime: BigInt!
  guildBankAddress: Bytes
  proposalCount: BigInt!
  memberCount: BigInt!
  voteCount: BigInt!
  rageQuitCount: BigInt!
  balances: [Balance!] @derivedFrom(field: "moloch")
}

type Balance @entity {
  id: ID!
  timestamp: String!
  balance: BigInt!
  tokenAddress: Bytes!
  molochAddress: Bytes!
  moloch: Moloch!
  payment: Boolean!
  tribute: Boolean!
  action: String!
  amount: BigInt
  rageQuitAllShares: Boolean
  version: String!
}

type ProposalDetail @entity {
  id: ID!
  createdAt: String!
  proposalId: BigInt!
  moloch: Moloch!
  molochAddress: Bytes!
  applicant: Bytes!
  tributeOffered: BigInt!
  tributeToken: Bytes!
  paymentRequested: BigInt!
  paymentToken: Bytes!
}

type Badge @entity {
  id: ID!
  memberAddress: Bytes!
  voteCount: BigInt!
  summonCount: BigInt!
  proposalSponsorCount: BigInt!
  proposalSubmissionCount: BigInt!
  proposalProcessorCount: BigInt!
  rageQuitCount: BigInt!
  jailedCount: BigInt!
  memberships: BigInt!
  dissents: BigInt!
  assents: BigInt!
  totalGas: BigInt!
}
